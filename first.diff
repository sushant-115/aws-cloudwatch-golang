diff --git a/config/config.go b/config/config.go
index 02af5ee..c0d5481 100644
--- a/config/config.go
+++ b/config/config.go
@@ -10,13 +10,13 @@ var DimensionName = []string{"MetricName", "MetricName", "MetricName"}
 var DimensionValue = []string{"RequestCount", "CPUUtilization", "VolumeWriteBytes"}
 
 //Threshold for each metric for notification
-var Threshold =[]float64{100 , 10.00001, 500000}
+var Threshold = []float64{10000000, 1, 10000000}
 
 //Stat value
-var Stat = "Average"
+var Stat ="Maximum"// "Average"
 
 //Unit in which the output will come
-var Unit = []string{"Count", "Percent", "Bytes"}
+var Unit = []string{"Count", "Percent", "KiloBytes"}
 
 //StartTime number of days from today
 var StartTime = 1
@@ -25,7 +25,7 @@ var StartTime = 1
 var EndTime = 0
 
 //Period in seconds
-var Period = 3600*24
+var Period = 3600 * 24
 
 //MaxDataPoints in result
-var MaxDataPoints = 1000
+var MaxDataPoints = 100800
diff --git a/emailHtml/app.go b/emailHtml/app.go
index d961e96..db49adb 100644
--- a/emailHtml/app.go
+++ b/emailHtml/app.go
@@ -10,7 +10,7 @@ func Configuration() {
 
 func SendMail(report []structs.Report) {
 	Configuration()
-	subject := "Get latest Tech News directly to your inbox"
+	subject := "Daily AWS Service Report"
 	destination := "sushant@exotel.in"
 	r := NewRequest([]string{destination}, subject)
 	r.Send("emailHtml/templates/template.html", map[string][]structs.Report{"report": report})
diff --git a/emailHtml/templates/template.html b/emailHtml/templates/template.html
index 65025eb..a417b5b 100644
--- a/emailHtml/templates/template.html
+++ b/emailHtml/templates/template.html
@@ -3,11 +3,11 @@
   <head>
     <meta name="viewport" content="width=device-width"/>
     <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
-    <title>Subscribe To My Blog - M.Labouardy</title>
+    <title>AWS Service Report</title>
     <style type="text/css">
      
 h1{
-  font-size: 30px;
+  font-size: 100%;
   color: #000;
   text-transform: uppercase;
   font-weight: 300;
@@ -105,7 +105,6 @@ section{
   </head>
   <body >
       <section style="background:linear-gradient(to right, #25c481, #25b7c4)">
-          <h1>{{.username}}</h1>
           <h1>Daily AWS Service Report</h1>
           <div class="tbl-header">
             <table cellpadding="0" cellspacing="0" border="0">
@@ -114,6 +113,7 @@ section{
                   <th>Service Name</th>
                   <th>Service ID</th>
                   <th>Report</th>
+                  <th>Utilization</th>
                   <th>Timestamp</th>
                 </tr>
               </thead>
@@ -127,6 +127,7 @@ section{
                   <td>{{.ServiceName}}</td>
                   <td>{{.ServiceID}} </td>
                   <td>{{.Report}}</td>
+                  <td>{{.Utiliization}}</td>
                   <td>{{.Timestamp}}</td>
                 </tr>
                 {{end}}
diff --git a/list_metric.go b/list_metric.go
index 9efab65..9eddf8b 100644
--- a/list_metric.go
+++ b/list_metric.go
@@ -45,6 +45,9 @@ func getListParam(namespace, dimensionName, dimensionValue string) *cloudwatch.L
 }
 
 func getParam(index int, list *cloudwatch.Metric) cloudwatch.GetMetricDataInput {
+	if len(list.Dimensions) < 1 {
+		return cloudwatch.GetMetricDataInput{}
+	}
 	endTime := time.Now().AddDate(0, 0, -config.EndTime)
 	startTime := time.Now().AddDate(0, 0, -config.StartTime)
 	startTimePointer := &startTime
@@ -57,6 +60,7 @@ func getParam(index int, list *cloudwatch.Metric) cloudwatch.GetMetricDataInput
 	periodPointer = &period
 	returnData := true
 	maxDataPoints := int64(config.MaxDataPoints)
+	//fmt.Println(list.Dimensions)
 	metricStat := cloudwatch.MetricStat{
 		Metric: &cloudwatch.Metric{ /* required */
 			Dimensions: []*cloudwatch.Dimension{list.Dimensions[0]},
@@ -84,6 +88,7 @@ func getParam(index int, list *cloudwatch.Metric) cloudwatch.GetMetricDataInput
 }
 
 func judge(result *cloudwatch.GetMetricDataOutput, threshold float64) bool {
+	//	fmt.Println(result)
 	for i := 0; i < len(result.MetricDataResults); i++ {
 		metricValue := result.MetricDataResults[i].Values
 		for j := 0; j < len(metricValue); j++ {
@@ -125,22 +130,26 @@ func main() {
 							fmt.Println(i, err)
 						} else {
 							if judge(res, threshold[j]) {
+//								fmt.Println(res)
 								serviceName := result.Metrics[0].Namespace
 								serviceID := result.Metrics[0].Dimensions[0].Value
 								report := "Unutilized"
+								utilization := *res.MetricDataResults[0].Values[0]
 								timestamp := *res.MetricDataResults[0].Timestamps[0]
-								r := structs.Report{*serviceName, *serviceID, report, timestamp.String()}
+								r := structs.Report{*serviceName, *serviceID, report, utilization, timestamp.String()}
 								reports = append(reports, r)
 							}
 						}
 					}
 				} else {
 					if judge(res, threshold[j]) {
+//						fmt.Println(res)
 						serviceName := result.Metrics[0].Namespace
 						serviceID := result.Metrics[0].Dimensions[0].Value
 						report := "Unutilized"
+						utilization := *res.MetricDataResults[0].Values[0]
 						timestamp := *res.MetricDataResults[0].Timestamps[0]
-						r := structs.Report{*serviceName, *serviceID, report, timestamp.String()}
+						r := structs.Report{*serviceName, *serviceID, report, utilization, timestamp.String()}
 						reports = append(reports, r)
 					}
 				}
diff --git a/structs/report.go b/structs/report.go
index 23efedf..7730bd0 100644
--- a/structs/report.go
+++ b/structs/report.go
@@ -2,8 +2,9 @@ package structs
 
 //Report struct for the generated reports
 type Report struct {
-	ServiceName string
-	ServiceID   string
-	Report      string
-	Timestamp   string
+	ServiceName  string
+	ServiceID    string
+	Report       string
+	Utiliization float64
+	Timestamp    string
 }
